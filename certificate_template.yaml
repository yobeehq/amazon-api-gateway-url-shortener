AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: This AWS CloudFormation template creates ACM certificates for the backend and frontend domains, and stores their ARNs in the SSM Parameter Store. It uses AWS SAM to manage the Lambda function that stores DNS records.

Parameters:
  BackendDomain:
    Type: String
    Description: The backend domain for the certificate
    Default: yo-b.one
  FrontendDomain:
    Type: String
    Description: Frontend domain for the Amplify app frontend
    Default: url-shortener.yobee.rocks
  HostingZone:
    Type: String
    Description: The AWS region for hosting resources
    Default: ap-south-1
  CloudflareApiToken:
    Type: String
    Description: The API token for Cloudflare
    NoEcho: true
  CloudflareZoneIdForFrontend:
    Type: String
    Description: ZoneID for the frontend domain
    Default: eeaefbbca0d628843f2662101cd4c210
  CloudflareZoneIdForBackend:
    Type: String
    Description: ZoneID for the frontend domain
    Default: 5633d4c66d35fb421dee68848ca54812


# 4819jfFUDgyR4eN_dPESA3TBjf5QefWd8XLZdNGG

Resources:
  BackendCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref BackendDomain
      ValidationMethod: DNS
      SubjectAlternativeNames:
        - !Sub www.${BackendDomain}

  FrontendCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: !Ref FrontendDomain
      ValidationMethod: DNS
      SubjectAlternativeNames:
        - !Sub www.${FrontendDomain}

  LambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub "${AWS::StackName}"
      ContentUri: ./lambdas/lambda_layer.zip
      CompatibleRuntimes:
        - python3.12
      LicenseInfo: 'Yobee Rocks License'

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: LambdaExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'
              - Effect: Allow
                Action:
                  - ssm:PutParameter
                  - ssm:DeleteParameter
                Resource:
                  - arn:aws:ssm:*:*:parameter/config/certificate/BackendCertificateArn
                  - arn:aws:ssm:*:*:parameter/config/certificate/FrontendCertificateArn
              - Effect: Allow
                Action:
                  - acm:DescribeCertificate
                Resource: '*'

  StoreCertificateArnFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: store_certificate_arn.lambda_handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          REGION: !Ref HostingZone
      Runtime: python3.12
      Layers:
        - !Ref LambdaLayer
      CodeUri: ./lambdas/


  StoreCertificateArns:
    Type: Custom::StoreCertificateArn
    DependsOn:
      - StoreCertificateArnFunction
      - BackendCertificate
      - FrontendCertificate
    Properties:
      ServiceToken: !GetAtt StoreCertificateArnFunction.Arn
      BackendCertificateArn: !Ref BackendCertificate
      FrontendCertificateArn: !Ref FrontendCertificate


  ACMStoreDnsRecordsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: acm_store_dns_records.lambda_handler
      Runtime: python3.12
      Layers:
        - !Ref LambdaLayer
      Role: !GetAtt LambdaExecutionRole.Arn
      Environment:
        Variables:
          CFLARE_API_TOKEN: !Ref CloudflareApiToken
      CodeUri: ./lambdas/


  StoreDnsRecordsFrontend:
    Type: Custom::StoreDnsRecords
    Properties:
      ServiceToken: !GetAtt StoreDnsRecordsFunction.Arn
      CertificateArn: !Ref FrontendCertificate
      ZoneId: !Ref CloudflareZoneIdForFrontend

  StoreDnsRecordsBackend:
    Type: Custom::StoreDnsRecords
    Properties:
      ServiceToken: !GetAtt StoreDnsRecordsFunction.Arn
      CertificateArn: !Ref BackendCertificate
      ZoneId: !Ref CloudflareZoneIdForBackend


Outputs:
  BackendCertificateArn:
    Value: !Ref BackendCertificate
    Export:
      Name: BackendCertificateArn

  FrontendCertificateArn:
    Value: !Ref FrontendCertificate
    Export:
      Name: FrontendCertificateArn
